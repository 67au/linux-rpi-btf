name: Build linux-rpi with BTF

on:
  workflow_dispatch:
  workflow_call:

jobs:
  alarm_build:
    runs-on: ubuntu-latest
    name: Build linux-rpi-btf

    permissions:
      contents: read
      packages: read

    services:
      distccd:
        image: ghcr.io/67au/distccd-aarch64:master
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
        ports:
          - 3632:3632

    steps:
      - name: Set workdir
        id: setup
        run: |
          mkdir -p ./workdir/repo
          sudo apt-get update
          sudo apt-get install -y ccache
          echo "timestamp=$(date +%s)" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@v4
        id: cache-ccache
        name: setup ccache
        with:
          path: ./ccache
          key: ccache-${{ steps.setup.outputs.timestamp }}
          restore-keys: |
            ccache-
      - name: not hit cache
        if: steps.cache-ccache.outputs.cache-hit != 'true'
        run: |
          mkdir ./ccache
      - name: set ccache
        run: |
          ls -la ${PWD}/ccache
          export PATH="/usr/lib/ccache/bin/:$PATH"
          export CCACHE_DIR=${PWD}/ccache
          ccache --set-config=max_size=2.0G
          ccache -s
          
      - uses: actions/checkout@v4
        with:
          repository: archlinuxarm/PKGBUILDs
          path: './workdir/PKGBUILDs'
      - uses: uraimo/run-on-arch-action@v2.7.1
        name: Build Kernel
        with:
          arch: aarch64
          distro: archarm_latest
          githubToken: ${{ secrets.GH_PAT }}
          dockerRunArgs: |
            --volume "${PWD}/workdir:/workdir" --volume "${PWD}/ccache:/ccache" --user alarm
          shell: /bin/bash
          install: |
            sed -i 's/^CheckSpace/#CheckSpace/g' /etc/pacman.conf
            pacman -Syu --noconfirm gawk
            rm -rf /etc/pacman.d/gnupg
            pacman-key --init
            pacman-key --populate archlinuxarm
            pacman-key --lsign-key "builder@archlinuxarm.org"
            pacman -Syu --noconfirm base-devel python pahole ccache distcc
            groupadd users
            useradd -m alarm
            sed -i 's/#MAKEFLAGS="-j2"/MAKEFLAGS="-j5"/' /etc/makepkg.conf
            sed -i 's/#PACKAGER="John Doe <john@doe.com>"/PACKAGER="${{ secrets.PACKAGER }}"/' /etc/makepkg.conf
            sed -i 's/#GPGKEY=""/GPGKEY="${{ secrets.GPGKEY }}"/' /etc/makepkg.conf
            sed -i "s/PKGEXT='.pkg.tar.xz'/PKGEXT='.pkg.tar.zst'/" /etc/makepkg.conf
            sed -i "s/BUILDENV=(!distcc color !ccache check !sign)/BUILDENV=(distcc color ccache check sign)/" /etc/makepkg.conf
            sed -i 's/#DISTCC_HOSTS=""/DISTCC_HOSTS="localhost\/5:3632"/' /etc/makepkg.conf
            echo "distccd" >> /etc/distcc/hosts
            echo "alarm ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
          run: |
            sudo chown alarm:alarm -R /workdir
            sudo chown alarm:alarm -R /ccache
            export PATH="/usr/lib/ccache/bin/:$PATH"
            export CCACHE_DIR=/ccache
            ccache --set-config=max_size=2.0G
            ccache -s
            echo -n "${{ secrets.GPG_SIGNING_KEY }}" | gpg --import
            sudo pacman-key --recv-keys ${{ secrets.GPGKEY }}
            sudo pacman-key --finger ${{ secrets.GPGKEY }}
            sudo pacman-key --lsign-key ${{ secrets.GPGKEY }}
            cd /workdir/PKGBUILDs/core/linux-rpi
            echo 'Hacking PKGBUILD'
            sed -i "s#make olddefconfig#sed -i '/CONFIG_DEBUG_INFO/d;/CONFIG_RING_BUFFER/d;/CONFIG_TRACING/d;/CONFIG_STACKTRACE/d;/CONFIG_NOP_TRACER/d;/CONFIG_BINARY_PRINTF/d;/CONFIG_EVENT_TRACING/d;/CONFIG_TRACE_CLOCK/d;/CONFIG_TASKS_RCU/d' .config\nmake olddefconfig#" PKGBUILD
            sed -i "s#make olddefconfig#echo 'CONFIG_DEBUG_INFO=y\nCONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT=y\nCONFIG_DEBUG_INFO_COMPRESSED_ZLIB=y\nCONFIG_DEBUG_INFO_BTF=y\nCONFIG_KPROBE_EVENTS=y\nCONFIG_BPF_EVENTS=y\nCONFIG_RING_BUFFER=y\nCONFIG_TRACING=y\nCONFIG_STACKTRACE=y\nCONFIG_NOP_TRACER=y\nCONFIG_BINARY_PRINTF=y\nCONFIG_EVENT_TRACING=y\nCONFIG_TRACE_CLOCK=y\nCONFIG_TASKS_RCU=y' >> .config\nmake olddefconfig#" PKGBUILD
            sed -i "s#make olddefconfig#sed -i '/HAVE_GCC_PLUGINS/d' arch/arm64/Kconfig\nmake olddefconfig#" PKGBUILD
            sed -i 's#make "$_image" modules dtbs#CCACHE_PREFIX=distcc make "$_image" modules dtbs#' PKGBUILD
            sed -i "s#prepare() {#prepare() {\nmv ../linux-rpi.install ../linux-rpi-btf.install#" PKGBUILD
            sed -i "s#pkgbase=linux-rpi#pkgbase=linux-rpi-btf#" PKGBUILD
            sed -i "s#linux-rpi-16k#linux-rpi\nlinux-rpi-16k#" PKGBUILD
            makepkg -s --noconfirm --sign
            mkdir -p /workdir/repo/aarch64
            cp ./*.pkg.tar.zst /workdir/repo/aarch64
            cd /workdir/repo/aarch64
            repo-add --verify --sign fqegg.db.tar.gz *.pkg.tar.zst
      - name: check ccache
        if: ${{ always() }}
        run: |
          sudo chown github:github -R ${PWD}/ccache
          export PATH="/usr/lib/ccache/bin/:$PATH"
          export CCACHE_DIR=${PWD}/ccache
          ccache --set-config=max_size=2.0G
          ccache -s
      - name: save ccache
        if: ${{ always() }}
        uses: actions/cache@v4
        with:
          path: ./ccache
          key: ccache-${{ steps.setup.outputs.timestamp }}
          save-always: true
      - name: Upload Repo
        uses: actions/upload-pages-artifact@v3
        with:
          path: './workdir/repo'
